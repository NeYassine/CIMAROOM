{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./ExpoFontLoader","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":69},"end":{"line":2,"column":46,"index":115}}],"key":"7dk3JQGwGYesJt8OOG3pkBz+dtE=","exportNames":["*"]}},{"name":"./FontLoader","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":116},"end":{"line":3,"column":70,"index":186}}],"key":"ubgLNxOkixzH8pVapAwap9wQ8XU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getServerResources = getServerResources;\n  exports.registerStaticFont = registerStaticFont;\n  exports.resetServerContext = resetServerContext;\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _ExpoFontLoader = _interopRequireDefault(require(_dependencyMap[2], \"./ExpoFontLoader\"));\n  var _FontLoader = require(_dependencyMap[3], \"./FontLoader\");\n  /**\n   * @returns the server resources that should be statically extracted.\n   * @private\n   */\n  function getServerResources() {\n    if (!_ExpoFontLoader.default.getServerResources) {\n      throw new _expoModulesCore.UnavailabilityError('expo-font', 'getServerResources');\n    }\n    return _ExpoFontLoader.default.getServerResources();\n  }\n  /**\n   * @returns clear the server resources from the global scope.\n   * @private\n   */\n  function resetServerContext() {\n    if (!_ExpoFontLoader.default.resetServerContext) {\n      throw new _expoModulesCore.UnavailabilityError('expo-font', 'resetServerContext');\n    }\n    return _ExpoFontLoader.default.resetServerContext();\n  }\n  function registerStaticFont(fontFamily, source) {\n    // MUST BE A SYNC FUNCTION!\n    if (!source) {\n      throw new _expoModulesCore.CodedError(`ERR_FONT_SOURCE`, `Cannot load null or undefined font source: { \"${fontFamily}\": ${source} }. Expected asset of type \\`FontSource\\` for fontFamily of name: \"${fontFamily}\"`);\n    }\n    const asset = (0, _FontLoader.getAssetForSource)(source);\n    (0, _FontLoader.loadSingleFontAsync)(fontFamily, asset);\n  }\n});","lineCount":40,"map":[[9,2,1,0],[9,6,1,0,"_expoModulesCore"],[9,22,1,0],[9,25,1,0,"require"],[9,32,1,0],[9,33,1,0,"_dependencyMap"],[9,47,1,0],[10,2,2,0],[10,6,2,0,"_ExpoFontLoader"],[10,21,2,0],[10,24,2,0,"_interopRequireDefault"],[10,46,2,0],[10,47,2,0,"require"],[10,54,2,0],[10,55,2,0,"_dependencyMap"],[10,69,2,0],[11,2,3,0],[11,6,3,0,"_FontLoader"],[11,17,3,0],[11,20,3,0,"require"],[11,27,3,0],[11,28,3,0,"_dependencyMap"],[11,42,3,0],[12,2,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,2,8,7],[16,11,8,16,"getServerResources"],[16,29,8,34,"getServerResources"],[16,30,8,34],[16,32,8,37],[17,4,9,4],[17,8,9,8],[17,9,9,9,"ExpoFontLoader"],[17,32,9,23],[17,33,9,24,"getServerResources"],[17,51,9,42],[17,53,9,44],[18,6,10,8],[18,12,10,14],[18,16,10,18,"UnavailabilityError"],[18,52,10,37],[18,53,10,38],[18,64,10,49],[18,66,10,51],[18,86,10,71],[18,87,10,72],[19,4,11,4],[20,4,12,4],[20,11,12,11,"ExpoFontLoader"],[20,34,12,25],[20,35,12,26,"getServerResources"],[20,53,12,44],[20,54,12,45],[20,55,12,46],[21,2,13,0],[22,2,14,0],[23,0,15,0],[24,0,16,0],[25,0,17,0],[26,2,18,7],[26,11,18,16,"resetServerContext"],[26,29,18,34,"resetServerContext"],[26,30,18,34],[26,32,18,37],[27,4,19,4],[27,8,19,8],[27,9,19,9,"ExpoFontLoader"],[27,32,19,23],[27,33,19,24,"resetServerContext"],[27,51,19,42],[27,53,19,44],[28,6,20,8],[28,12,20,14],[28,16,20,18,"UnavailabilityError"],[28,52,20,37],[28,53,20,38],[28,64,20,49],[28,66,20,51],[28,86,20,71],[28,87,20,72],[29,4,21,4],[30,4,22,4],[30,11,22,11,"ExpoFontLoader"],[30,34,22,25],[30,35,22,26,"resetServerContext"],[30,53,22,44],[30,54,22,45],[30,55,22,46],[31,2,23,0],[32,2,24,7],[32,11,24,16,"registerStaticFont"],[32,29,24,34,"registerStaticFont"],[32,30,24,35,"fontFamily"],[32,40,24,45],[32,42,24,47,"source"],[32,48,24,53],[32,50,24,55],[33,4,25,4],[34,4,26,4],[34,8,26,8],[34,9,26,9,"source"],[34,15,26,15],[34,17,26,17],[35,6,27,8],[35,12,27,14],[35,16,27,18,"CodedError"],[35,43,27,28],[35,44,27,29],[35,61,27,46],[35,63,27,48],[35,112,27,97,"fontFamily"],[35,122,27,107],[35,128,27,113,"source"],[35,134,27,119],[35,204,27,189,"fontFamily"],[35,214,27,199],[35,217,27,202],[35,218,27,203],[36,4,28,4],[37,4,29,4],[37,10,29,10,"asset"],[37,15,29,15],[37,18,29,18],[37,22,29,18,"getAssetForSource"],[37,51,29,35],[37,53,29,36,"source"],[37,59,29,42],[37,60,29,43],[38,4,30,4],[38,8,30,4,"loadSingleFontAsync"],[38,39,30,23],[38,41,30,24,"fontFamily"],[38,51,30,34],[38,53,30,36,"asset"],[38,58,30,41],[38,59,30,42],[39,2,31,0],[40,0,31,1],[40,3]],"functionMap":{"names":["<global>","getServerResources","resetServerContext","registerStaticFont"],"mappings":"AAA;OCO;CDK;OEK;CFK;OGC;CHO"}},"type":"js/module"}]}